<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
  <string>A common mistake that people make when trying to design something completely foolproof is to underestimate the ingenuity of complete fools.</string>
  <string>A computer is a stupid machine with the ability to do incredibly smart things, while computer programmers are smart people with the ability to do incredibly stupid things. They are, in short, a perfect match.</string>
  <string>A good programmer is someone who always looks both ways before crossing a one-way street.</string>
  <string>A language that doesn't have everything is actually easier to program in than some that do.</string>
  <string>Any man can make mistakes, but only an idiot persists in his error.</string>
  <string>Are you quite sure that all those bells and whistles, all those wonderful facilities of your so called powerful programming languages, belong to the solution set rather than the problem set?</string>
  <string>Art is never finished, only abandoned.</string>
  <string>Assumption is the mother of all fuckups.</string>
  <string>Beauty is the ultimate defense against complexity.</string>
  <string>C is a razor-sharp tool, with which one can create an elegant and efficient program or a bloody mess.</string>
  <string>Compatibility means deliberately repeating other people's mistakes.</string>
  <string>Computers are good at following instructions, but not at reading your mind.</string>
  <string>Computers are useless. They can only give you answers.</string>
  <string>Controlling complexity is the essence of computer programming.</string>
  <string>Corporation, n. An ingenious device for obtaining individual profit without individual responsibility.</string>
  <string>Creativity is just connecting things. When you ask creative people how they did something, they feel a little guilty because they didn't really do it, they just saw something. It seemed obvious to them after a while. That's because they were able to connect experiences they've had and synthesize new things. And the reason they were able to do that was that they've had more experiences or they have thought more about their experiences than other people.</string>
  <string>Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.</string>
  <string>Deleted code is debugged code.</string>
  <string>Elegance is not a dispensable luxury but a quality that decides between success and failure.</string>
  <string>Engineering is the art of doing with one dollar what any damn fool can do with two.</string>
  <string>Every being in the universe knows right from wrong.</string>
  <string>Give me six hours to chop down a tree and I will spend the first four sharpening the axe.</string>
  <string>Givern enough thrust even a brick will fly.</string>
  <string>God is real, unless explicitly declared as integer.</string>
  <string>Great software, likewise, requires a fanatical devotion to beauty. If you look inside good software, you find that parts no one is ever supposed to see are beautiful too.  I'm not claiming I write great software, but I know that when it comes to code I behave in a way that would make me eligible for prescription drugs if I approached everyday life the same way. It drives me crazy to see code that's badly indented, or that uses ugly variable names.</string>
  <string>Have no fear of perfection — you'll never reach it.</string>
  <string>I cannot give you the formula for success, but I can give you the formula for failure: which is: try to please everybody.</string>
  <string>I contend that we are both atheists. I just believe in one fewer god than you do. When you understand why you dismiss all the other possible gods, you will understand why I dismiss yours.</string>
  <string>I hear and I forget. I see and I remember. I do and I understand.</string>
  <string>If I had more time, I would have written a shorter letter.</string>
  <string>If we wish to count lines of code, we should not regard them as "lines produced" but as "lines spent".</string>
  <string>If you can't explain it simply, you don't understand it well enough.</string>
  <string>If you cannot grok the overall structure of a program while taking a shower, e.g., with no external memory aids, you are not ready to code it.</string>
  <string>If you don’t fail at least 90 percent of the time, you’re not aiming high enough.</string>
  <string>If you think C++ is not overly complicated, just what is a protected abstract virtual base pure virtual private destructor and when was the last time you needed one?</string>
  <string>If you want me to give you a two-hour presentation, I am ready today.  If you want only a five-minute speech, it will take me two weeks to prepare.</string>
  <string>If you want to make an apple pie from scratch, you must first create the universe.</string>
  <string>In all affairs it's a healthy thing now and then to hang a question mark on the things you have long taken for granted.</string>
  <string>In the modern world the stupid are cocksure while the intelligent are full of doubt.</string>
  <string>Inspiration exists, but it has to find you working.</string>
  <string>Isn't it enough to see that a garden is beautiful without having to believe that there are fairies at the bottom of it too?</string>
  <string>It is my ambition to say in ten sentences what others say in a whole book.</string>
  <string>It's very easy to be different, but very difficult to be better.</string>
  <string>Law 1: Every program can be optimized to be smaller. Law 2: There's always one more bug. Corollary: Every program can be reduced to a one-line bug.</string>
  <string>Life is like riding a bicycle. To keep your balance, you must keep moving.</string>
  <string>Measuring programming progress by lines of code is like measuring aircraft building progress by weight.</string>
  <string>Men never do evil so completely and cheerfully as when they do it from a religious conviction.</string>
  <string>More computing sins are committed in the name of efficiency (without necessarily achieving it) than for any other single reason — including blind stupidity.</string>
  <string>Most software today is very much like an Egyptian pyramid with millions of bricks piled on top of each other, with no structural integrity, but just done by brute force and thousands of slaves.</string>
  <string>My tastes are simple: I am easily satisfied with the best.</string>
  <string>No masterpiece was ever created by a lazy artist.</string>
  <string>Nothing is more permanent than a temporary solution.</string>
  <string>Object-oriented design is the roman numerals of computing.</string>
  <string>One Page Principle: A specification that will not fit on one page of 8.5x11 inch paper cannot be understood.</string>
  <string>One of my most productive days was throwing away 1000 lines of code.</string>
  <string>One of the main causes of the fall of the Roman Empire was that–lacking zero–they had no way to indicate successful termination of their C programs.</string>
  <string>People love chopping wood. In this activity one immediately sees results.</string>
  <string>People who deal with bits should expect to get bitten.</string>
  <string>Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.</string>
  <string>Perl — The only language that looks the same before and after RSA encryption.</string>
  <string>Programming graphics in X is like finding the square root of PI using Roman numerals.</string>
  <string>Programming is a desperate losing battle against the unconquerable complexity of code.</string>
  <string>Simplicity is a great virtue but it requires hard work to achieve it and education to appreciate it. And to make matters worse: complexity sells better.</string>
  <string>Simplicity is prerequisite for reliability.</string>
  <string>Simplicity is the ultimate sophistication.</string>
  <string>So far as I can remember, there is not one word in the Gospels in praise of intelligence.</string>
  <string>Software and cathedrals are much the same. First we build them, then we pray.</string>
  <string>Some problems are so complex that you have to be highly intelligent and well informed just to be undecided about them.</string>
  <string>Syntactic sugar causes cancer of the semicolon.</string>
  <string>That's the thing about people who think they hate computers. What they really hate is lousy programmers.</string>
  <string>The ability to simplify means to eliminate the unnecessary so that the necessary may speak.</string>
  <string>The best way to predict the future is to invent it.</string>
  <string>The computing scientist's main challenge is not to get confused by the complexities of his own making.</string>
  <string>The important thing is not to stop questioning. Curiosity has its own reason for existing. One cannot help but be in awe when he contemplates the mysteries of eternity, of life, of the marvelous structure of reality. It is enough if one tries merely to comprehend a little of this mystery every day. Never lose a holy curiosity.</string>
  <string>The major cause [of the software crisis] is that the machines have become several orders of magnitude more powerful! To put it quite bluntly: as long as there were no machines, programming was no problem at all; when we had a few weak computers, programming became a mild problem, and now we have gigantic computers, programming has become an equally gigantic problem. In this sense the electronic industry has not solved a single problem, it has only created them, it has created the problem of using its products.</string>
  <string>The most amazing achievement of the computer software industry is its continuing cancellation of the steady and staggering gains made by the computer hardware industry.</string>
  <string>The most effective debugging tool is still careful thought, coupled with judiciously placed print statements.</string>
  <string>The only way for errors to occur in a program is by being put there by the author. No other mechanisms are known. Programs can't acquire bugs by sitting around with other buggy programs.</string>
  <string>The question of whether computers can think is like the question of whether submarines can swim.</string>
  <string>The road to hell is paved with good intentions.</string>
  <string>Those who put blinders on their eyes should remember that the set also includes bridle and a whip.</string>
  <string>Too many people spend money they haven’t earned, to buy things they don’t want, to impress people they don’t like.</string>
  <string>We have persistant objects, they're called files.</string>
  <string>When the only tool you own is a hammer, every problem you encounter resembles a nail.</string>
  <string>When you're young, you look at television and think, There's a conspiracy. The networks have conspired to dumb us down. But when you get a little older, you realize that's not true. The networks are in business to give people exactly what they want. That's a far more depressing thought. Conspiracy is optimistic! You can shoot the bastards! We can have a revolution! But the networks are really in business to give people what they want. It's the truth.</string>
  <string>When you’re a carpenter making a beautiful chest of drawers, you’re not going to use a piece of plywood on the back, even though it faces the wall and nobody will ever see it. You’ll know it’s there, so you’re going to use a beautiful piece of wood on the back. For you to sleep well at night, the aesthetic, the quality, has to be carried all the way through.</string>
  <string>Why join the navy if you can be a pirate?</string>
  <string>Work expands so as to fill the time available for its completion.</string>
  <string>You know that I write slowly. This is chiefly because I am never satisfied until I have said as much as possible in a few words, and writing briefly takes far more time than writing at length.</string>
  <string>You probably know that arrogance, in computer science, is measured in nanodijkstras.</string>
  <string>You're bound to be unhappy if you optimize everything.</string>
</array>
</plist>
